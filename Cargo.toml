[package]
name = "synchronized"
version = "1.1.0"
authors = ["Denis Kotlyarov (Денис Котляров) <denis2005991@gmail.com>"]
repository = "https://github.com/clucompany/synchronized.git"
edition = "2024"

license = "Apache-2.0"
readme = "README.md"

description = "Convenient and simple macro for code synchronization in multithreading."
keywords = ["easy_sync_code", "synchronized", "no_std", "clucompany"]
categories = ["concurrency", "no-std"]

# docs.rs-specific configuration
[package.metadata.docs.rs]
# document all features
all-features = true
# defines the configuration attribute `docsrs`
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["std", "point"]
# Adds or removes support for the `sync_point` macro.
point = []
# Use synchronization primitives from `std`. Note that is_lock is not supported in it.
#
# Note that you can just use `parking_lot` instead of `std`.
std = []

# The synchronization primitive is implemented using the `tokio`+`parking_lot` 
# library for an asynchronous environment.
async = ["tokio"]

[dependencies]
# The synchronization primitive is implemented using the `parking_lot` library.
parking_lot = { version = "0.12.3", optional = true }

# The synchronization primitive is implemented using the `tokio`+`parking_lot` library.
tokio = { version = "1.44.2", optional = true, default-features = false, features = ["parking_lot", "sync"]}
